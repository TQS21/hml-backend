services:
  db_users:
    container_name: hml_db_users
    image: postgres:14.1-alpine
    env_file: ./.env
    environment:
      - PGUSER=$POSTGRES_USER_USERS
      - POSTGRES_DB=$POSTGRES_DB_USERS
      - POSTGRES_USER=$POSTGRES_USER_USERS
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD_USERS
    ports:
      - $POSTGRES_PORT_USERS:5432
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30

  db_books:
    container_name: hml_db_books
    image: postgres:14.1-alpine
    env_file: ./.env
    environment:
      - PGUSER=$POSTGRES_USER_BOOKS
      - POSTGRES_DB=$POSTGRES_DB_BOOKS
      - POSTGRES_USER=$POSTGRES_USER_BOOKS
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD_BOOKS
    ports:
      - $POSTGRES_PORT_BOOKS:5432
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30

  hml-api:
    container_name: hml_api
    depends_on:
      - db_users
      - db_books
    build: ./hml
    env_file: ./.env
    environment:
      - SPRING_DATASOURCE_URL_USERS=jdbc:postgresql://db_users:5433/$POSTGRES_DB_USERS
      - SPRING_DATASOURCE_USERNAME_USERS=$POSTGRES_USER_USERS
      - SPRING_DATASOURCE_PASSWORD_USERS=$POSTGRES_PASSWORD_USERS

      - SPRING_DATASOURCE_URL_BOOKS=jdbc:postgresql://db_books:5434/$POSTGRES_DB_BOOKS
      - SPRING_DATASOURCE_USERNAME_BOOKS=$POSTGRES_USER_BOOKS
      - SPRING_DATASOURCE_PASSWORD_BOOKS=$POSTGRES_PASSWORD_BOOKS

      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - $SPRING_PORT:8080
    restart: on-failure